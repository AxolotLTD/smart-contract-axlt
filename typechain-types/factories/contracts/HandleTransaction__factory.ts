/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HandleTransaction,
  HandleTransactionInterface,
} from "../../contracts/HandleTransaction";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "countTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "depositLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "depositLimitMap",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCountTransaction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDepositLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getExchangeRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "rateIncrement",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rateIncrementMap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052670de0b6b3a7640000600155670de0b6b3a76400006002556207a120600355600160075534801561003457600080fd5b5061003e33610143565b6207a1207fabd6e7cb50984ff9c2f3e18a2660c3353dadf4e3291deeb275dae2cd1e44fe05556203d0907f56751dd9534a4025520708fb24b7b0d243a2b8aeda2c1c014349d4820461947c556202dc6c7f63ef1a4e38a23a766f1ee077c11a96273dc27deffabf05c012ab92b5ea18a43655620225517e63e080ee38b707ae7fcf5eebd0a60dbbd5978f0aeadb985d564e5695755985556201e8487fa7173c9c8888e7911936458de32ee817ea0eb243bf7577b66507c7dd086275f85568056bc75e2d63100000600081905260066020527fb17b3e3d156639a9476cbe6540632e35c85a6062ffb58030e466819252c2b695805460ff19166001179055600555610193565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61033a806101a26000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80638da5cb5b116100715780638da5cb5b14610105578063abda8a9c14610120578063e6aa216c14610128578063ecf7085814610130578063f2fde38b14610139578063fe8784801461014c57600080fd5b806339b6727c146100ae57806359408c0c146100e15780635ec1cc54146100ea578063715018a6146100f357806377839eb7146100fd575b600080fd5b6100ce6100bc3660046102bb565b60046020526000908152604090205481565b6040519081526020015b60405180910390f35b6100ce60075481565b6100ce60035481565b6100fb61017f565b005b6007546100ce565b6000546040516001600160a01b0390911681526020016100d8565b6005546100ce565b6001546100ce565b6100ce60055481565b6100fb6101473660046102d4565b610193565b61016f61015a3660046102bb565b60066020526000908152604090205460ff1681565b60405190151581526020016100d8565b610187610211565b610191600061026b565b565b61019b610211565b6001600160a01b0381166102055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61020e8161026b565b50565b6000546001600160a01b031633146101915760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101fc565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102cd57600080fd5b5035919050565b6000602082840312156102e657600080fd5b81356001600160a01b03811681146102fd57600080fd5b939250505056fea26469706673582212202e14d33391c4411df82656158c076b89825b12d440b40cc140553a6811e602a464736f6c63430008120033";

type HandleTransactionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HandleTransactionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HandleTransaction__factory extends ContractFactory {
  constructor(...args: HandleTransactionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HandleTransaction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HandleTransaction__factory {
    return super.connect(runner) as HandleTransaction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HandleTransactionInterface {
    return new Interface(_abi) as HandleTransactionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HandleTransaction {
    return new Contract(address, _abi, runner) as unknown as HandleTransaction;
  }
}
